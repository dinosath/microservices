apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: apicurio-registry
  name: apicurio-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: apicurio-registry
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        network/kafka-network: "true"
        io.kompose.network/synapse: "true"
        io.kompose.service: apicurio-registry
    spec:
      containers:
        - env:
            - name: AUTH_ENABLED
              value: "false"
            - name: ENABLE_KAFKA_SASL
              value: "false"
            - name: REGISTRY_EVENTS_KAFKA_CONFIG_ENABLE_IDEMPOTENCE
              value: "false"
            - name: QUARKUS_LOG_CONSOLE_LEVEL
              value: DEBUG
            - name: REGISTRY_EVENTS_KAFKA_TOPIC_PARTITION
              value: "1"
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: redpanda-0.redpanda.redpanda.svc.cluster.local:9092
#              value: kafka-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092
#              value: redpanda:29092
            - name: KEYCLOAK_API_CLIENT_ID
              value: registry-api
            - name: REGISTRY_EVENTS_KAFKA_TOPIC
              value: apicurio-registry-events
          image: apicurio/apicurio-registry-mem:2.4.2.Final
          name: apicurio-registry
          ports:
            - containerPort: 8080
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: apicurio-registry
  name: apicurio-registry
spec:
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
  selector:
    io.kompose.service: apicurio-registry
status:
  loadBalancer: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: apicurio-registry-ingress
  annotations:
    # nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rewrite-target: $1
spec:
  rules:
    - http:
        paths:
          - path: /registry
            pathType: Prefix
            backend:
              service:
                name: apicurio-registry
                port:
                  number: 8080