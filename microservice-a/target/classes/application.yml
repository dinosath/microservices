quarkus:
  application:
    name: microservice-a
  rest-client:
    "microservice-b-client":
      url: "http://localhost:8082"
  log:
    level: INFO
    category:
      "com.crazyfly":
        level: DEBUG
    console:
      format: "%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n"
      level: INFO
      darken: 1
  opentelemetry:
    tracer:
      resource-attributes: "app=${quarkus.application.name},application=microservice-a,system=crazyfly-microservices"
      exporter:
        otlp:
          endpoint: http://localhost:4317
  hibernate-orm:
    database:
      generation: drop-and-create
  http:
    cors: true
    port: 8080
    test-port: 0
  jackson:
    serialization-inclusion: non-empty
  smallrye-openapi:
    info-title: Hero API
    info-description: This API allows CRUD operations on a hero
    info-version: 1.0
    info-contact-name: Quarkus
    info-contact-url: https://github.com/quarkusio
    servers: "http://localhost:${quarkus.http.port}"
  swagger-ui:
    always-include: true
  container-image:
    builder: docker
    registry: quay.io
    group: quarkus-super-heroes
    name: "${quarkus.application.name}"
#  kubernetes:
#    part-of: heroes-service
#    annotations:
#      "app.openshift.io/connects-to": heroes-db,otel-collector
#    env:
#      configmaps: "${quarkus.application.name}-config"
#      secrets: "${quarkus.application.name}-config-creds"
#    labels:
#      app: "${quarkus.application.name}"
#      application: "${quarkus.kubernetes.part-of}"
#      system: quarkus-super-heroes
#  openshift:
#    base-jvm-image: "${paths.base-image.jvm-11}"
#    base-native-image: "${paths.base-image.native}"
#    part-of: "${quarkus.kubernetes.part-of}"
#    route:
#      expose: true
#    annotations:
#      "app.openshift.io/connects-to": heroes-db,otel-collector
#    env:
#      configmaps: "${quarkus.kubernetes.env.configmaps}"
#      secrets: "${quarkus.kubernetes.env.secrets}"
#    labels:
#      app: "${quarkus.kubernetes.labels.app}"
#      application: "${quarkus.openshift.part-of}"
#      system: "${quarkus.kubernetes.labels.system}"
#  knative:
#    part-of: "${quarkus.kubernetes.part-of}"
#    annotations:
#      "app.openshift.io/connects-to": heroes-db,otel-collector
#    env:
#      configmaps: "${quarkus.kubernetes.env.configmaps}"
#      secrets: "${quarkus.kubernetes.env.secrets}"
#    labels:
#      app: "${quarkus.kubernetes.labels.app}"
#      application: "${quarkus.openshift.part-of}"
#      system: "${quarkus.kubernetes.labels.system}"

"%dev":
  quarkus:
    log:
      console:
        format: "%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n"
        level: DEBUG

"%test":
  quarkus:
    log:
      console:
        format: "%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n"
        level: DEBUG

"%prod":
  quarkus:
    hibernate-orm:
      sql-load-script: import.sql

"%kubernetes":
  quarkus:
    config:
      profile:
        parent: prod

"%openshift":
  quarkus:
    config:
      profile:
        parent: prod
    container-image:
      builder: openshift
    kubernetes:
      deployment-target: openshift

"%minikube":
  quarkus:
    config:
      profile:
        parent: prod
    kubernetes:
      deployment-target: minikube
